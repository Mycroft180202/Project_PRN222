@{
    ViewData["Title"] = "Vendor Dashboard - EShopper";
    Layout = null; // Disable default layout
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>@ViewData["Title"]</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="Vendor Management" name="keywords">
    <meta content="Vendor dashboard for managing products and vendor information" name="description">

    <!-- Favicon -->
    <link href="~/img/favicon.ico" rel="icon" onerror="this.style.display='none'">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous">

    <!-- Bootstrap 5 Stylesheet -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">

    <!-- Custom Styles -->
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #e8ecef;
            color: #333333;
            margin: 0;
            padding: 0;
        }

        .container-fluid {
            padding: 0;
            display: flex;
            height: 100vh;
        }

        .sidebar {
            width: 250px;
            background-color: #ffffff;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.05);
            padding: 20px 0;
            flex-shrink: 0;
        }

            .sidebar h4 {
                color: #333333;
                font-weight: 600;
                padding: 0 20px 20px;
                margin: 0;
                border-bottom: 1px solid #e8ecef;
            }

            .sidebar a {
                color: #333333;
                padding: 12px 20px;
                display: flex;
                align-items: center;
                text-decoration: none;
                transition: all 0.3s ease;
                cursor: pointer;
            }

                .sidebar a i {
                    margin-right: 10px;
                }

                .sidebar a:hover, .sidebar a.active {
                    background-color: #e8ecef;
                    color: #333333;
                }

        .content {
            flex-grow: 1;
            padding: 30px;
            overflow-y: auto;
            background-color: #e8ecef;
        }

            .content h2 {
                color: #333333;
                font-weight: 600;
                margin-bottom: 30px;
                text-align: center;
            }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            background-color: #ffffff;
            margin-bottom: 30px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .card:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
            }

        .card-header {
            background-color: #333333;
            border-bottom: none;
            padding: 15px 20px;
            border-radius: 10px 10px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .card-header h3 {
                color: #ffffff;
                font-weight: 500;
                margin: 0;
            }

        .btn-primary {
            background-color: #333333;
            border-color: #333333;
            border-radius: 5px;
            padding: 8px 20px;
            color: #ffffff;
            transition: all 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #555555;
                border-color: #555555;
            }

        .btn-warning {
            background-color: #e8ecef;
            border-color: #e8ecef;
            color: #333333;
            padding: 6px 12px;
            transition: all 0.3s ease;
        }

            .btn-warning:hover {
                background-color: #d3d7dc;
                border-color: #d3d7dc;
            }

        .btn-danger {
            background-color: #ff4d4d;
            border-color: #ff4d4d;
            padding: 6px 12px;
            transition: all 0.3s ease;
        }

            .btn-danger:hover {
                background-color: #e63946;
                border-color: #e63946;
            }

        .table {
            background-color: #ffffff;
            border-radius: 0 0 10px 10px;
            margin-bottom: 0;
        }

            .table thead th {
                background-color: #e8ecef;
                color: #333333;
                font-weight: 500;
                border: none;
                padding: 12px;
            }

            .table tbody tr:hover {
                background-color: #f8f9fa;
            }

            .table td {
                vertical-align: middle;
                padding: 12px;
            }

        .modal-content {
            border-radius: 10px;
            border: none;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            background-color: #ffffff;
        }

        .modal-header {
            background-color: #333333;
            border-bottom: none;
            border-radius: 10px 10px 0 0;
            padding: 15px 20px;
        }

        .modal-title {
            color: #ffffff;
            font-weight: 500;
        }

        .modal-body {
            padding: 20px;
            background-color: #ffffff;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-control {
            border-radius: 5px;
            border: 1px solid #e8ecef;
            padding: 10px;
            width: 100%;
            background-color: #fafafa;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

            .form-control:focus {
                border-color: #333333;
                box-shadow: 0 0 5px rgba(51, 51, 51, 0.3);
                background-color: #ffffff;
            }

        .modal-footer {
            padding: 15px 20px;
            border-top: none;
            background-color: #ffffff;
        }

            .modal-footer .btn-secondary {
                background-color: #e8ecef;
                border-color: #e8ecef;
                color: #333333;
            }

                .modal-footer .btn-secondary:hover {
                    background-color: #d3d7dc;
                    border-color: #d3d7dc;
                }

            .modal-footer .btn-primary {
                background-color: #333333;
                border-color: #333333;
                color: #ffffff;
            }

                .modal-footer .btn-primary:hover {
                    background-color: #555555;
                    border-color: #555555;
                }
    </style>
</head>
<body>
    <div class="container-fluid">
        <!-- Sidebar -->
        <div class="sidebar">
            <h4>Vendor Dashboard</h4>
            <a class="nav-link active" data-tab="vendor-info"><i class="fas fa-info-circle"></i> Vendor Information</a>
            <a class="nav-link" data-tab="products"><i class="fas fa-box"></i> Product Management</a>
            <form asp-action="Logout" asp-controller="Auth" method="post" style="margin: 0;">
                @Html.AntiForgeryToken()
                <button type="submit" class="nav-link" style="border: none; background: none; width: 100%; text-align: left; margin-left: 20px"><i class="fas fa-sign-out-alt"></i> Logout</button>
            </form>
        </div>

        <!-- Main Content -->
        <div class="content">
            <h2>Vendor Management</h2>
            <div class="tab-content">
                <!-- Vendor Information Tab -->
                <div class="tab-pane fade show active" id="vendor-info">
                    <div class="card">
                        <div class="card-header">
                            <h3>Vendor Information</h3>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editVendorModal">Edit</button>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table" id="vendorTable">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>Vendor Name</th>
                                            <th>Contact Email</th>
                                            <th>Contact Phone</th>
                                            <th>Address</th>
                                            <th>Created Date</th>
                                            <th>Active</th>
                                            <th>User ID</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Product Management Tab -->
                <div class="tab-pane fade" id="products">
                    <div class="card">
                        <div class="card-header">
                            <h3>Vendor Products</h3>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">Add Product</button>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table" id="productTable">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>Name</th>
                                            <th>Description</th>
                                            <th>Price</th>
                                            <th>Stock Quantity</th>
                                            <th>Image</th>
                                            <th>Category</th>
                                            <th>Created Date</th>
                                            <th>Updated Date</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Vendor Modal -->
    <div class="modal fade" id="editVendorModal" tabindex="-1" aria-labelledby="editVendorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editVendorModalLabel">Edit Vendor Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editVendorForm" method="put">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="editVendorId" name="VendorId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editVendorName">Vendor Name</label>
                                    <input type="text" class="form-control" id="editVendorName" name="VendorName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editContactEmail">Contact Email</label>
                                    <input type="email" class="form-control" id="editContactEmail" name="ContactEmail" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editContactPhone">Contact Phone</label>
                                    <input type="text" class="form-control" id="editContactPhone" name="ContactPhone" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editAddress">Address</label>
                                    <input type="text" class="form-control" id="editAddress" name="Address" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editIsActive">Active</label>
                                    <select class="form-control" id="editIsActive" name="IsActive" required>
                                        <option value="true">Yes</option>
                                        <option value="false">No</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Update</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Product Modal -->
    <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addProductForm" method="post">
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="addProductName">Product Name</label>
                                    <input type="text" class="form-control" id="addProductName" name="ProductName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="addPrice">Price</label>
                                    <input type="number" class="form-control" id="addPrice" name="Price" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="addStockQuantity">Stock Quantity</label>
                                    <input type="number" class="form-control" id="addStockQuantity" name="StockQuantity" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="addCategoryId">Category ID</label>
                                    <input type="number" class="form-control" id="addCategoryId" name="CategoryId" required>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="addImageUrl">Image URL</label>
                                    <input type="text" class="form-control" id="addImageUrl" name="ImageUrl" required>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="addDescription">Description</label>
                                    <textarea class="form-control" id="addDescription" name="Description" rows="3" required></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save Product</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Product Modal -->
    <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm" method="put">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="editProductId" name="ProductId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editProductName">Product Name</label>
                                    <input type="text" class="form-control" id="editProductName" name="ProductName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editPrice">Price</label>
                                    <input type="number" class="form-control" id="editPrice" name="Price" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editStockQuantity">Stock Quantity</label>
                                    <input type="number" class="form-control" id="editStockQuantity" name="StockQuantity" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="editCategoryId">Category ID</label>
                                    <input type="number" class="form-control" id="editCategoryId" name="CategoryId" required>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="editImageUrl">Image URL</label>
                                    <input type="text" class="form-control" id="editImageUrl" name="ImageUrl" required>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="editDescription">Description</label>
                                    <textarea class="form-control" id="editDescription" name="Description" rows="3" required></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Update Product</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>

    <!-- Custom JavaScript -->
    <script>
        $(document).ready(function () {
            var currentUserId = 1; // Thay bằng cách lấy userId thực tế từ session/token
            var currentVendorId = null;

            // Tab switching
            $('.nav-link').on('click', function () {
                var target = $(this).data('tab');
                $('.tab-pane').removeClass('show active');
                $('.nav-link').removeClass('active');
                $('#' + target).addClass('show active');
                $(this).addClass('active');
            });

            // Hàm gọi API với danh sách endpoint thử nghiệm
            function callApi(endpointList, method, data, successCallback, errorCallback) {
                function tryNextEndpoint(index) {
                    if (index >= endpointList.length) {
                        errorCallback({ status: 404, statusText: 'Vendor API not found on this server' });
                        return;
                    }
                    $.ajax({
                        url: endpointList[index],
                        method: method,
                        contentType: 'application/json',
                        data: method === 'GET' ? null : JSON.stringify(data),
                        headers: {
                            'X-CSRF-TOKEN': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            successCallback(response);
                        },
                        error: function (xhr) {
                            console.warn(`Endpoint ${endpointList[index]} failed with ${xhr.status}`);
                            tryNextEndpoint(index + 1);
                        }
                    });
                }
                tryNextEndpoint(0);
            }

            // Tải thông tin vendor
            function loadVendor() {
                var vendorEndpoints = [
                    `/api/Vendor/GetByUserId/${currentUserId}`, // Dựa trên VendorService
                    `/api/Vendor/${currentUserId}`,            // RESTful đơn giản
                    `/api/Vendors`,                           // Số nhiều, lấy danh sách
                    `/api/Vendor/current`,                    // Vendor hiện tại
                    `/api/Vendor/info`                        // Dự phòng
                ];
                callApi(
                    vendorEndpoints,
                    'GET',
                    null,
                    function (response) {
                        var tbody = $('#vendorTable tbody');
                        tbody.empty();
                        var vendor = response;
                        // Nếu response là mảng (danh sách), lọc theo userId
                        if (Array.isArray(response)) {
                            vendor = response.find(v => v.userId === currentUserId || v.UserId === currentUserId);
                        }
                        if (vendor) {
                            currentVendorId = vendor.vendorId || vendor.VendorId;
                            var row = `
                                <tr>
                                    <td>${vendor.vendorId || vendor.VendorId || ''}</td>
                                    <td>${vendor.vendorName || vendor.VendorName || ''}</td>
                                    <td>${vendor.contactEmail || vendor.ContactEmail || ''}</td>
                                    <td>${vendor.contactPhone || vendor.ContactPhone || ''}</td>
                                    <td>${vendor.address || vendor.Address || ''}</td>
                                    <td>${vendor.createdDate || vendor.CreatedDate ? new Date(vendor.createdDate || vendor.CreatedDate).toISOString().split('T')[0] : ''}</td>
                                    <td>${vendor.isActive || vendor.IsActive ? 'Yes' : 'No'}</td>
                                    <td>${vendor.userId || vendor.UserId || ''}</td>
                                </tr>`;
                            tbody.append(row);
                            loadProducts(); // Tải sản phẩm sau khi có vendorId
                        } else {
                            tbody.append('<tr><td colspan="8">No vendor data found for this user</td></tr>');
                        }
                    },
                    function (xhr) {
                        console.error('Error loading vendor:', xhr.status, xhr.statusText);
                        var errorMessage = xhr.status === 404
                            ? 'Error 404: Vendor API not found on this server.'
                            : `Error ${xhr.status}: ${xhr.statusText} - ${xhr.responseText}`;
                        $('#vendorTable tbody').html(`<tr><td colspan="8">${errorMessage}</td></tr>`);
                    }
                );
            }
            loadVendor();

            // Tải danh sách sản phẩm của vendor
            function loadProducts() {
                if (!currentVendorId) {
                    $('#productTable tbody').html('<tr><td colspan="10">Please load vendor data first</td></tr>');
                    return;
                }
                var productEndpoints = [
                    `/api/Products/GetByVendorId/${currentVendorId}`,
                    `/api/Products/Vendor/${currentVendorId}`,
                    `/api/Products`
                ];
                callApi(
                    productEndpoints,
                    'GET',
                    null,
                    function (response) {
                        var tbody = $('#productTable tbody');
                        tbody.empty();
                        var products = response;
                        // Nếu response là mảng, lọc theo vendorId
                        if (Array.isArray(response)) {
                            products = response.filter(p => p.vendorId === currentVendorId || p.VendorId === currentVendorId);
                        }
                        if (products && products.length > 0) {
                            products.forEach(function (product) {
                                var row = `
                                    <tr>
                                        <td>${product.productId || product.ProductId || ''}</td>
                                        <td>${product.productName || product.ProductName || ''}</td>
                                        <td>${product.description || product.Description || ''}</td>
                                        <td>${product.price || product.Price || ''}</td>
                                        <td>${product.stockQuantity || product.StockQuantity || ''}</td>
                                        <td>${product.imageUrl || product.ImageUrl || ''}</td>
                                        <td>${product.categoryId || product.CategoryId || ''}</td>
                                        <td>${product.createdDate || product.CreatedDate ? new Date(product.createdDate || product.CreatedDate).toISOString().split('T')[0] : ''}</td>
                                        <td>${product.updatedDate || product.UpdatedDate ? new Date(product.updatedDate || product.UpdatedDate).toISOString().split('T')[0] : ''}</td>
                                        <td>
                                            <button class="btn btn-warning mr-2 edit-product" data-id="${product.productId || product.ProductId}">Edit</button>
                                            <button class="btn btn-danger delete-product" data-id="${product.productId || product.ProductId}">Delete</button>
                                        </td>
                                    </tr>`;
                                tbody.append(row);
                            });
                        } else {
                            tbody.append('<tr><td colspan="10">No products found for this vendor</td></tr>');
                        }
                    },
                    function (xhr) {
                        console.error('Error loading products:', xhr.status, xhr.statusText);
                        var errorMessage = xhr.status === 404
                            ? 'Error 404: Products API not found on this server.'
                            : `Error ${xhr.status}: ${xhr.statusText} - ${xhr.responseText}`;
                        $('#productTable tbody').html(`<tr><td colspan="10">${errorMessage}</td></tr>`);
                    }
                );
            }

            // Xử lý form chỉnh sửa vendor
            $('#editVendorForm').on('submit', function (e) {
                e.preventDefault();
                var vendorId = $('#editVendorId').val();
                var formData = $(this).serializeArray();
                var vendorData = { VendorId: parseInt(vendorId), UserId: currentUserId };
                formData.forEach(function (item) {
                    if (item.name === 'VendorId') {
                        vendorData[item.name] = parseInt(item.value);
                    } else if (item.name === 'IsActive') {
                        vendorData[item.name] = item.value === 'true';
                    } else {
                        vendorData[item.name] = item.value || null;
                    }
                });

                var updateEndpoints = [
                    `/api/Vendor/${vendorId}`,
                    `/api/Vendors/${vendorId}`,
                    `/api/Vendor/Update/${vendorId}`
                ];
                callApi(
                    updateEndpoints,
                    'PUT',
                    vendorData,
                    function () {
                        $('#editVendorModal').modal('hide');
                        location.reload();
                    },
                    function (xhr) {
                        alert('Error updating vendor: ' + xhr.statusText + ' - ' + xhr.responseText);
                    }
                );
            });

            // Điền dữ liệu vào modal chỉnh sửa vendor
            $('#editVendorModal').on('show.bs.modal', function () {
                var vendorEndpoints = [
                    `/api/Vendor/GetByUserId/${currentUserId}`,
                    `/api/Vendor/${currentUserId}`,
                    `/api/Vendors`,
                    `/api/Vendor/current`,
                    `/api/Vendor/info`
                ];
                callApi(
                    vendorEndpoints,
                    'GET',
                    null,
                    function (response) {
                        var vendor = response;
                        if (Array.isArray(response)) {
                            vendor = response.find(v => v.userId === currentUserId || v.UserId === currentUserId);
                        }
                        if (vendor) {
                            $('#editVendorId').val(vendor.vendorId || vendor.VendorId);
                            $('#editVendorName').val(vendor.vendorName || vendor.VendorName);
                            $('#editContactEmail').val(vendor.contactEmail || vendor.ContactEmail);
                            $('#editContactPhone').val(vendor.contactPhone || vendor.ContactPhone);
                            $('#editAddress').val(vendor.address || vendor.Address);
                            $('#editIsActive').val((vendor.isActive || vendor.IsActive) ? 'true' : 'false');
                        } else {
                            alert('No vendor data found for this user');
                        }
                    },
                    function (xhr) {
                        alert('Error loading vendor: ' + xhr.statusText + ' - ' + xhr.responseText);
                    }
                );
            });

            // Xử lý form thêm sản phẩm
            $('#addProductForm').on('submit', function (e) {
                e.preventDefault();
                var formData = $(this).serializeArray();
                var productData = { VendorId: currentVendorId };
                formData.forEach(function (item) {
                    if (item.name === 'Price') {
                        productData[item.name] = parseFloat(item.value);
                    } else if (item.name === 'StockQuantity' || item.name === 'CategoryId') {
                        productData[item.name] = parseInt(item.value);
                    } else {
                        productData[item.name] = item.value;
                    }
                });

                var addProductEndpoints = [
                    '/api/Products',
                    '/api/Products/Create',
                    `/api/Products/Vendor/${currentVendorId}`
                ];
                callApi(
                    addProductEndpoints,
                    'POST',
                    productData,
                    function () {
                        $('#addProductModal').modal('hide');
                        location.reload();
                    },
                    function (xhr) {
                        alert('Error adding product: ' + xhr.statusText + ' - ' + xhr.responseText);
                    }
                );
            });

            // Xử lý nút Edit Product
            $('#productTable').on('click', '.edit-product', function () {
                var productId = $(this).data('id');
                var getProductEndpoints = [
                    `/api/Products/${productId}`,
                    `/api/Products/GetById/${productId}`
                ];
                callApi(
                    getProductEndpoints,
                    'GET',
                    null,
                    function (product) {
                        $('#editProductId').val(product.productId || product.ProductId);
                        $('#editProductName').val(product.productName || product.ProductName);
                        $('#editPrice').val(product.price || product.Price);
                        $('#editStockQuantity').val(product.stockQuantity || product.StockQuantity);
                        $('#editCategoryId').val(product.categoryId || product.CategoryId);
                        $('#editImageUrl').val(product.imageUrl || product.ImageUrl);
                        $('#editDescription').val(product.description || product.Description);
                        $('#editProductModal').modal('show');
                    },
                    function (xhr) {
                        alert('Error loading product: ' + xhr.statusText + ' - ' + xhr.responseText);
                    }
                );
            });

            // Xử lý form chỉnh sửa sản phẩm
            $('#editProductForm').on('submit', function (e) {
                e.preventDefault();
                var productId = $('#editProductId').val();
                var formData = $(this).serializeArray();
                var productData = { ProductId: parseInt(productId), VendorId: currentVendorId };
                formData.forEach(function (item) {
                    if (item.name === 'Price') {
                        productData[item.name] = parseFloat(item.value);
                    } else if (item.name === 'StockQuantity' || item.name === 'CategoryId') {
                        productData[item.name] = parseInt(item.value);
                    } else {
                        productData[item.name] = item.value;
                    }
                });

                var updateProductEndpoints = [
                    `/api/Products/${productId}`,
                    `/api/Products/Update/${productId}`
                ];
                callApi(
                    updateProductEndpoints,
                    'PUT',
                    productData,
                    function () {
                        $('#editProductModal').modal('hide');
                        location.reload();
                    },
                    function (xhr) {
                        alert('Error updating product: ' + xhr.statusText + ' - ' + xhr.responseText);
                    }
                );
            });

            // Xử lý nút Delete Product
            $('#productTable').on('click', '.delete-product', function () {
                var productId = $(this).data('id');
                if (confirm('Are you sure you want to delete this product?')) {
                    var deleteProductEndpoints = [
                        `/api/Products/${productId}`,
                        `/api/Products/Delete/${productId}`
                    ];
                    callApi(
                        deleteProductEndpoints,
                        'DELETE',
                        null,
                        function () {
                            location.reload();
                        },
                        function (xhr) {
                            alert('Error deleting product: ' + xhr.statusText + ' - ' + xhr.responseText);
                        }
                    );
                }
            });
        });
    </script>
</body>
</html>