@model List<Project_PRN222.DTO.CartItemDto>

@{
    ViewData["Title"] = "Shopping Cart - EShopper";
    Layout = null; // Tắt Layout
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>@ViewData["Title"]</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="Free HTML Templates" name="keywords">
    <meta content="Free HTML Templates" name="description">

    <!-- Favicon -->
    <link href="~/img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="~/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet">

    <!-- Customized Stylesheet -->
    <link href="~/css/style.css" rel="stylesheet">

    <!-- Custom CSS for navbar hover and active states -->
    <style>
        .navbar-light .navbar-nav .nav-link:hover,
        .navbar-light .navbar-nav .nav-link.active {
            color: #D19C97;
        }

        .navbar-light .navbar-nav .dropdown-menu .dropdown-item:hover,
        .navbar-light .navbar-nav .dropdown-menu .dropdown-item.active {
            color: #D19C97;
        }

        .sort-button {
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            color: #000;
            transition: color 0.3s ease;
        }

        .sort-button i {
            font-size: 14px;
            margin-left: 5px;
        }

        .sort-button:hover {
            color: #007bff;
        }
    </style>
</head>

<body>
<!-- Header -->
@await Html.PartialAsync("_Header")

<!-- Page Header Start -->
<div class="container-fluid bg-secondary mb-5">
    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
        <h1 class="font-weight-semi-bold text-uppercase mb-3">Shopping Cart</h1>
        <div class="d-inline-flex">
            <p class="m-0"><a href="@Url.Action("Index", "Home")">Home</a></p>
            <p class="m-0 px-2">-</p>
            <p class="m-0">Shopping Cart</p>
        </div>
    </div>
</div>
<!-- Page Header End -->

<!-- Cart Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <div class="col-lg-8 table-responsive mb-5">
            <table class="table table-bordered text-center mb-0">
                <thead class="bg-secondary text-dark">
                <tr>
                    <th>Products</th>
                    <th>
                        <button class="sort-button" data-sort="price">
                            Price <i class="fas fa-sort"></i>
                        </button>
                    </th>
                    <th>Quantity</th>
                    <th>
                        <button class="sort-button" data-sort="total">
                            Total <i class="fas fa-sort"></i>
                        </button>
                    </th>
                    <th>Remove</th>
                </tr>
                </thead>
                <tbody class="align-middle">
                @if (Model != null && Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <tr data-cart-item-id="@item.CartItemId">
                            <td class="align-middle">
                                
                                @item.ProductName
                            </td>
                            <td class="align-middle" data-price="@item.Price">@item.Price.ToString("N0") VND</td>
                            <td class="align-middle">
                                <div class="input-group quantity mx-auto" style="width: 100px;">
                                    <div class="input-group-btn">
                                        <button class="btn btn-sm btn-primary btn-minus" onclick="updateQuantity(@item.CartItemId, -1)">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                    <input type="text" class="form-control form-control-sm bg-secondary text-center" value="@item.Quantity" readonly>
                                    <div class="input-group-btn">
                                        <button class="btn btn-sm btn-primary btn-plus" onclick="updateQuantity(@item.CartItemId, 1)">
                                            <i class="fa fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td class="align-middle">@((item.Price * item.Quantity).ToString("N0")) VND</td>
                            <td class="align-middle">
                                <button class="btn btn-sm btn-primary" onclick="removeFromCart(@item.CartItemId)">
                                    <i class="fa fa-times"></i>
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center py-5">
                            <h4>Your cart is empty</h4>
                            <p class="mb-4">Looks like you haven't added anything to your cart yet.</p>
                            <a href="@Url.Action("Index", "Product")" class="btn btn-primary py-2 px-4">Continue Shopping</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        <div class="col-lg-4">
            <form class="mb-5" action="">
                <div class="input-group">
                    <input type="text" class="form-control p-4" id="couponCode" placeholder="Coupon Code">
                    <div class="input-group-append">
                        <button class="btn btn-primary" onclick="applyCoupon(event)">Apply Coupon</button>
                    </div>
                </div>
            </form>
            <div class="card border-secondary mb-5">
                <div class="card-header bg-secondary border-0">
                    <h4 class="font-weight-semi-bold m-0">Cart Summary</h4>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3 pt-1">
                        <h6 class="font-weight-medium">Subtotal</h6>
                        <h6 class="font-weight-medium" id="subtotal">
                            @{
                                var subtotal = Model?.Sum(item => item.Price * item.Quantity) ?? 0;
                            }
                            @subtotal.ToString("N0") VND
                        </h6>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Shipping</h6>
                        <h6 class="font-weight-medium" id="shipping">30,000 VND</h6>
                    </div>
                </div>
                <div class="card-footer border-secondary bg-transparent">
                    <div class="d-flex justify-content-between mt-2">
                        <h5 class="font-weight-bold">Total</h5>
                        <h5 class="font-weight-bold" id="total">@((subtotal + 30000).ToString("N0")) VND</h5>
                    </div>
                    <a href="@Url.Action("Checkout", "Order")" class="btn btn-block btn-primary my-3 py-3">Proceed To Checkout</a>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Cart End -->

<!-- Footer -->
<div class="container-fluid bg-secondary text-dark mt-5 pt-5">
    <div class="row px-xl-5 pt-5">
        <div class="col-lg-4 col-md-12 mb-5 pr-3 pr-xl-5">
            <a href="@Url.Action("Index", "Home")" class="text-decoration-none">
                <h1 class="mb-4 display-5 font-weight-semi-bold"><span class="text-primary font-weight-bold border border-white px-3 mr-1">E</span>Shopper</h1>
            </a>
            <p>E-Shopper is an online store offering handmade products such as ceramics, silk, and bamboo woven items. Discover unique, artfully crafted, and sustainable products for your living space</p>
            <p class="mb-2"><i class="fa fa-map-marker-alt text-primary mr-3"></i>29 Mã Mây, Hoàn Kiếm, Hà Nội</p>
            <p class="mb-2"><i class="fa fa-envelope text-primary mr-3"></i>eshopper@gmail.com.vn</p>
            <p class="mb-0"><i class="fa fa-phone-alt text-primary mr-3"></i>086 911 5100</p>
        </div>
        <!-- Footer content continues as in Index.cshtml -->
    </div>
</div>
<!-- Footer End -->
<!-- Back to Top -->
<a href="#" class="btn btn-primary back-to-top"><i class="fa fa-angle-double-up"></i></a>

<!-- JavaScript Libraries -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/easing/easing.min.js"></script>
<script src="~/lib/owlcarousel/owl.carousel.min.js"></script>

<!-- Contact Javascript File -->
<script src="~/mail/jqBootstrapValidation.min.js"></script>
<script src="~/mail/contact.js"></script>

<!-- Template Javascript -->
<script src="~/js/main.js"></script>

<!-- Custom JavaScript for Cart Interactions -->
<script>
    // Hàm cập nhật số lượng sản phẩm trong giỏ hàng
    function updateQuantity(cartItemId, change) {
        const row = $(`tr[data-cart-item-id="${cartItemId}"]`);
        const quantityInput = row.find('input[type="text"]');
        let quantity = parseInt(quantityInput.val()) + change;

        if (quantity < 1) {
            quantity = 1; // Đảm bảo số lượng không nhỏ hơn 1
        }

        $.ajax({
            url: `/api/cart/${cartItemId}`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(quantity),
            success: function () {
                quantityInput.val(quantity);
                const price = parseFloat(row.find('td[data-price]').data('price'));
                const total = price * quantity;
                row.find('td:nth-child(4)').text(formatCurrency(total));
                updateCartSummary();
                updateCartBadge();
            },
            error: function (xhr) {
                alert('Error updating quantity: ' + (xhr.responseJSON?.Message || 'Unknown error'));
            }
        });
    }

    // Hàm xóa sản phẩm khỏi giỏ hàng
    function removeFromCart(cartItemId) {
        if (confirm('Are you sure you want to remove this item from your cart?')) {
            $.ajax({
                url: `/api/cart/${cartItemId}`,
                type: 'DELETE',
                success: function () {
                    $(`tr[data-cart-item-id="${cartItemId}"]`).remove();
                    updateCartSummary();
                    updateCartBadge();
                },
                error: function (xhr) {
                    alert('Error removing item: ' + (xhr.responseJSON?.Message || 'Unknown error'));
                }
            });
        }
    }

    // Hàm cập nhật tổng giá trị giỏ hàng
    function updateCartSummary() {
        let subtotal = 0;
        $('td:nth-child(4)').each(function () {
            const totalText = $(this).text().replace(/[^\d]/g, '');
            subtotal += parseFloat(totalText) || 0;
        });

        const shipping = 30000;
        const total = subtotal + shipping;

        $('#subtotal').text(formatCurrency(subtotal));
        $('#shipping').text(formatCurrency(shipping));
        $('#total').text(formatCurrency(total));
    }

    // Helper function to format currency with thousands separators and VND
    function formatCurrency(amount) {
        return new Intl.NumberFormat('vi-VN').format(amount) + ' VND';
    }

    // Hàm cập nhật số lượng sản phẩm trên biểu tượng giỏ hàng
    function updateCartBadge() {
        $.get('/api/cart', function (data) {
            var itemCount = data.length || 0;
            $('#cartBadge').text(itemCount);
        }).fail(function () {
            $('#cartBadge').text('0');
        });
    }

    // Hàm áp dụng mã giảm giá (chưa triển khai logic cụ thể)
    function applyCoupon(event) {
        event.preventDefault();
        const couponCode = $('#couponCode').val();
        alert('Coupon code applied: ' + couponCode);
        // Thêm logic áp dụng mã giảm giá nếu cần
    }

    // Hàm sắp xếp danh sách sản phẩm
    $(document).ready(function () {
        let sortDirection = 'asc';

        $('.sort-button').click(function () {
            const sortBy = $(this).data('sort');
            sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';

            const rows = $('tbody tr').get();
            rows.sort(function (a, b) {
                let aValue, bValue;
                if (sortBy === 'price') {
                    aValue = parseFloat($(a).find('td[data-price]').data('price'));
                    bValue = parseFloat($(b).find('td[data-price]').data('price'));
                } else if (sortBy === 'total') {
                    aValue = parseFloat($(a).find('td:nth-child(4)').text().replace(/[^\d]/g, ''));
                    bValue = parseFloat($(b).find('td:nth-child(4)').text().replace(/[^\d]/g, ''));
                }

                return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;
            });

            $('tbody').empty().append(rows);
            updateCartSummary();
        });

        // Cập nhật tổng giá trị và badge ban đầu
        updateCartSummary();
        updateCartBadge();
    });
</script>
</body>
</html>